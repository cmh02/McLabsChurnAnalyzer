###
Script: skGathering - Plan Skript
Author: cmh02
Version: 1.0

This script will collect the Plan Player Analytics metrics of all players that have joined the server via placeholders.
Plan Player Analytics Github: https://github.com/plan-player-analytics/Plan
Plan Player Analytics Placeholders: https://github.com/plan-player-analytics/Plan/wiki/PlaceholderAPI
###

# Skript-Wide Options
options:
	labsprefix: <##00cdf6>&lMC<##00cdf6>&lL<##00b8e8>&la<##00a2da>&lb<##008dcc>&ls &fÂ»

# Load-Up Events
on script load:
	# Log the script load in console
	skGathering_messageLogFile("The Gathering Plan Player AnalyticsSkript has been loaded on server %{server}%!")

#######################
# GATHERING FUNCTIONS #
#######################

function skGathering_writePlanDataToFile(outputFileName: string):

	# Make sure the list of UUID's has been loaded
	if {skgathering::uuids::*} is not set:
		skGathering_messageLogFile("A call was made to get all player Plan Player Analytics data, but UUID's have not been loaded yet!", false, "SEVERE")
		stop

	# Prepare data output list with headers
	clear {_planDataOutputData::*}
	add "UUID, plan_player_time_total_raw, plan_player_time_month_raw, plan_player_time_week_raw, plan_player_time_day_raw, plan_player_time_afk_raw, plan_player_latest_session_length_raw, plan_player_favorite_server, plan_player_lastseen, plan_player_sessions_count" to {_planDataOutputData::*}

	# Make section for querying placeholders in async
	create new section with {_uuid} stored in {_getPlaceholdersForUuid}:

		# Get placeholder return values (raw times are in ms)
		set {_plan_player_time_total_raw} to the placeholder "plan_player_time_total_raw:%{_uuid}%"
		set {_plan_player_time_month_raw} to the placeholder "plan_player_time_month_raw:%{_uuid}%"
		set {_plan_player_time_week_raw} to the placeholder "plan_player_time_week_raw:%{_uuid}%"
		set {_plan_player_time_day_raw} to the placeholder "plan_player_time_day_raw:%{_uuid}%"
		set {_plan_player_time_afk_raw} to the placeholder "plan_player_time_afk_raw:%{_uuid}%"
		set {_plan_player_latest_session_length_raw} to the placeholder "plan_player_latest_session_length_raw:%{_uuid}%"
		set {_plan_player_favorite_server} to the placeholder "plan_player_favorite_server:%{_uuid}%"
		set {_plan_player_lastseen} to the placeholder "plan_player_lastseen:%{_uuid}%"
		set {_plan_player_sessions_count} to the placeholder "plan_player_sessions_count:%{_uuid}%"

		# Remove certain parts of lastseen
		replace every "," with "" in {_plan_player_lastseen}

		# Return in single comma-delimited string
		return "%{_plan_player_time_total_raw}%,%{_plan_player_time_month_raw}%,%{_plan_player_time_week_raw}%,%{_plan_player_time_day_raw}%,%{_plan_player_time_afk_raw}%,%{_plan_player_latest_session_length_raw}%,%{_plan_player_favorite_server}%,%{_plan_player_lastseen}%,%{_plan_player_sessions_count}%"


	# Loop over UUID's to get plan player analytics
	loop {skgathering::uuids::*}:

		# Make first request for all the placeholders so that Plan caches the data
		run section {_getPlaceholdersForUuid} async with arguments loop-value and store result in {_result} and wait
		
		# Slight delay so data can be caches
		wait 3 ticks

		# Request placeholders again to actually get the data
		run section {_getPlaceholdersForUuid} async with arguments loop-value and store result in {_result} and wait

		# Prepare data in CSV format
		add "%loop-value%,%{_result}%" to {_planDataOutputData::*}

	# Write all data to output file
	skGathering_messageOutputFile("%{outputFileName}%", {_planDataOutputData::*})